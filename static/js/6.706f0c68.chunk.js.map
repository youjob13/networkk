{"version":3,"sources":["components/common/FormsControls/FormControls.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Login/Login.module.css","components/Login/Login.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","FormControl","meta","touched","error","children","hasError","className","classes","formControl","Input","props","input","restProps","Textarea","LoginReduxForm","reduxForm","form","handleSubmit","captchaUrl","onSubmit","style","validate","name","component","type","placeholder","id","checkbox","htmlFor","src","formSummaryError","signIn","connect","auth","isAuth","loginThunkCreator","to","loginPage","formData","email","password","rememberMe","captcha"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,iCCDzH,oEAAO,IAAMC,EAAW,SAACC,GACvB,IAAIA,EAGJ,MAAO,qBAGIC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC9C,GAAIA,GAASA,EAAMG,OAASD,EAC1B,MAAM,iBAAN,OAAwBA,EAAxB,e,yJCNEE,EAAc,SAAC,GAA4C,IAAD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAASC,EAAe,EAAfA,SACzCC,EAAWH,GAAWC,EAC5B,OACE,sBACEG,UAAWC,IAAQC,YAAc,KAAOH,EAAWE,IAAQJ,MAAQ,IADrE,UAGE,8BAAMC,IACLC,GAAY,+BAAOF,QAKbM,EAAQ,SAACC,GAAW,IACvBC,EAA8BD,EAA9BC,MAAgBC,GAAcF,EAAvBT,KADe,YACQS,EADR,mBAE9B,OACE,cAACV,EAAD,2BAAiBU,GAAjB,aACE,iDAAWC,GAAWC,QAKfC,EAAW,SAACH,GAAW,IAC1BC,EAA8BD,EAA9BC,MAAgBC,GAAcF,EAAvBT,KADkB,YACKS,EADL,mBAEjC,OACE,cAACV,EAAD,2BAAiBU,GAAjB,aACE,oDAAcC,GAAWC,S,oBC3B/BnB,EAAOC,QAAU,CAAC,UAAY,yBAAyB,MAAQ,qBAAqB,SAAW,wBAAwB,OAAS,wB,yJC8E1HoB,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAlDL,SAAC,GAAD,IAAGE,EAAH,EAAGA,aAAcd,EAAjB,EAAiBA,MAAOe,EAAxB,EAAwBA,WAAxB,OAChB,uBAAMC,SAAUF,EAAhB,UACE,8BACE,cAAC,IAAD,CACEX,UAAWc,IAAMT,MACjBU,SAAU,CAAC1B,KACX2B,KAAK,QACLC,UAAWd,IACXe,KAAK,OACLC,YAAY,YAGhB,8BACE,cAAC,IAAD,CACEnB,UAAWc,IAAMT,MACjBW,KAAK,WACLD,SAAU,CAAC1B,KACX4B,UAAWd,IACXe,KAAK,WACLC,YAAY,eAGhB,gCACE,cAAC,IAAD,CACEH,KAAK,aACLC,UAAU,QACVC,KAAK,WACLE,GAAG,aAEL,uBAAOpB,UAAWc,IAAMO,SAAUC,QAAQ,WAA1C,2BAIDV,GAAc,qBAAKW,IAAKX,IACxBA,GACC,cAAC,IAAD,CACEZ,UAAWc,IAAMT,MACjBW,KAAK,UACLD,SAAU,CAAC1B,KACX4B,UAAWd,IACXe,KAAK,SAGRrB,GAAS,qBAAKG,UAAWC,IAAQuB,iBAAxB,SAA2C3B,IACrD,8BACE,wBAAQG,UAAWc,IAAMW,OAAzB,6BAUSC,uBAJS,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,MAAe,CACrCC,OAAQD,EAAKC,OACbhB,WAAYe,EAAKf,cAEqB,CAAEiB,uBAA3BH,EAzED,SAAC,GAA+C,IAA7CG,EAA4C,EAA5CA,kBAAmBD,EAAyB,EAAzBA,OAAQhB,EAAiB,EAAjBA,WAS1C,OAAIgB,EAAe,cAAC,IAAD,CAAUE,GAAG,aAE9B,sBAAK9B,UAAWc,IAAMiB,UAAtB,UACE,uCACA,cAACvB,EAAD,CAAgBI,WAAYA,EAAYC,SAZ3B,SAACmB,GAChBH,EACEG,EAASC,MACTD,EAASE,SACTF,EAASG,WACTH,EAASI","file":"static/js/6.706f0c68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2bn39\",\"error\":\"FormControls_error__2E7D-\",\"formSummaryError\":\"FormControls_formSummaryError__2gQrs\"};","export const required = (value) => {\r\n  if (value) {\r\n    return undefined;\r\n  }\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength) {\r\n    return `Max length is ${maxLength} symbols`;\r\n  }\r\n  return undefined;\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./FormControls.module.css\";\r\n\r\nconst FormControl = ({ meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div\r\n      className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}\r\n    >\r\n      <div>{children}</div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__9__K7\",\"input\":\"Login_input__3gKN8\",\"checkbox\":\"Login_checkbox__Z4r1x\",\"signIn\":\"Login_signIn__3n74Q\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { loginThunkCreator } from \"../../redux/authReducer\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { Input } from \"../common/FormsControls/FormsControls\";\r\n\r\nimport classes from \"../common/FormsControls/FormControls.module.css\";\r\nimport style from \"./Login.module.css\";\r\n\r\nconst Login = ({ loginThunkCreator, isAuth, captchaUrl }) => {\r\n  const onSubmit = (formData) => {\r\n    loginThunkCreator(\r\n      formData.email,\r\n      formData.password,\r\n      formData.rememberMe,\r\n      formData.captcha\r\n    );\r\n  };\r\n  if (isAuth) return <Redirect to=\"/profile\" />;\r\n  return (\r\n    <div className={style.loginPage}>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm captchaUrl={captchaUrl} onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => (\r\n  <form onSubmit={handleSubmit}>\r\n    <div>\r\n      <Field\r\n        className={style.input}\r\n        validate={[required]}\r\n        name=\"email\"\r\n        component={Input}\r\n        type=\"text\"\r\n        placeholder=\"email\"\r\n      />\r\n    </div>\r\n    <div>\r\n      <Field\r\n        className={style.input}\r\n        name=\"password\"\r\n        validate={[required]}\r\n        component={Input}\r\n        type=\"password\"\r\n        placeholder=\"password\"\r\n      />\r\n    </div>\r\n    <div>\r\n      <Field\r\n        name=\"rememberMe\"\r\n        component=\"input\"\r\n        type=\"checkbox\"\r\n        id=\"remember\"\r\n      />\r\n      <label className={style.checkbox} htmlFor=\"remember\">\r\n        RememberMe\r\n      </label>\r\n    </div>\r\n    {captchaUrl && <img src={captchaUrl} />}\r\n    {captchaUrl && (\r\n      <Field\r\n        className={style.input}\r\n        name=\"captcha\"\r\n        validate={[required]}\r\n        component={Input}\r\n        type=\"text\"\r\n      />\r\n    )}\r\n    {error && <div className={classes.formSummaryError}>{error}</div>}\r\n    <div>\r\n      <button className={style.signIn}>Sign In</button>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\nconst mapStateToProps = ({ auth }) => ({\r\n  isAuth: auth.isAuth,\r\n  captchaUrl: auth.captchaUrl,\r\n});\r\nexport default connect(mapStateToProps, { loginThunkCreator })(Login);\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/common/FormsControls/FormControls.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPostsForm.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","assests/img/upload.png","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","FormControl","meta","touched","error","children","hasError","className","classes","formControl","Input","props","input","restProps","Textarea","maxLength150","MyPostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","validate","textarea","placeholder","addPost","Post","photo","message","likeCount","item","UserPhoto","messageText","MyPosts","React","memo","postData","postsBlock","values","newPostText","reverse","map","id","MyPostsContainer","connect","profilePage","profile","photos","small","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","statusInput","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileDataReduxForm","information","inputInfo","type","additionalInfo","Object","keys","contacts","key","style","formSummaryError","btnSaveEdit","ProfileData","activeEditMode","isOwner","isContacts","setIsContacts","onAdditionalInfoClick","fullName","toUpperCase","lookingForAJob","lookingForAJobDescription","aboutMe","btnContacts","onClick","console","log","trim","contactTitle","contactValue","btnChangeInfo","Contact","socialLink","href","ProfileInfo","saveProfile","savePhoto","profileInfo","userPhoto","large","inputWrapper","inputFile","target","files","for","inputFileButton","inputFileIconWrapper","src","uploadPhoto","alt","width","inputFileButtonText","profileUserInfo","initialValues","formData","then","Profile","Preloader","compose","auth","authorizedUserId","userId","isAuth","getProfile","getStatus","withRouter","match","params","history","push"],"mappings":"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","file":"static/js/4.3ff15529.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2bn39\",\"error\":\"FormControls_error__2E7D-\",\"formSummaryError\":\"FormControls_formSummaryError__2gQrs\"};","export const required = (value) => {\r\n  if (value) {\r\n    return undefined;\r\n  }\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength) {\r\n    return `Max length is ${maxLength} symbols`;\r\n  }\r\n  return undefined;\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./FormControls.module.css\";\r\n\r\nconst FormControl = ({ meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div\r\n      className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}\r\n    >\r\n      <div>{children}</div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"socialLink\":\"ProfileInfo_socialLink__3nAgt\",\"contacts\":\"ProfileInfo_contacts__2Uwlq\",\"statusInput\":\"ProfileInfo_statusInput__Mbumx\",\"profileInfo\":\"ProfileInfo_profileInfo__29osV\",\"name\":\"ProfileInfo_name__14KVZ\",\"active\":\"ProfileInfo_active__11DlK\",\"profileUserInfo\":\"ProfileInfo_profileUserInfo__2UHax\",\"userPhoto\":\"ProfileInfo_userPhoto__33qID\",\"inputWrapper\":\"ProfileInfo_inputWrapper__MJS4f\",\"inputFile\":\"ProfileInfo_inputFile__36rgz\",\"inputFileIconWrapper\":\"ProfileInfo_inputFileIconWrapper__uxpsa\",\"inputFileButtonText\":\"ProfileInfo_inputFileButtonText__9tWVI\",\"inputFileButton\":\"ProfileInfo_inputFileButton__1JCzb\",\"information\":\"ProfileInfo_information__3M1gV\",\"btnChangeInfo\":\"ProfileInfo_btnChangeInfo__1yFyU\",\"btnContacts\":\"ProfileInfo_btnContacts__2lZ4i\",\"btnSaveEdit\":\"ProfileInfo_btnSaveEdit__2Pqx2\",\"inputInfo\":\"ProfileInfo_inputInfo__2SM7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2Bjim\",\"item\":\"MyPosts_item__sPXQK\",\"textarea\":\"MyPosts_textarea__3eBoL\",\"addPost\":\"MyPosts_addPost__STnXN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__33rLd\",\"message\":\"Post_message__3C6Py\",\"messageText\":\"Post_messageText__3t0EX\"};","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from \"../../../utils/validators/validators\";\r\nimport classes from \"./MyPosts.module.css\";\r\n\r\nconst maxLength150 = maxLengthCreator(150);\r\n\r\nconst MyPostsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          validate={[required, maxLength150]}\r\n          className={classes.textarea}\r\n          placeholder=\"Расскажите, что у Вас нового!\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button className={classes.addPost}>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport const MyPostsReduxForm = reduxForm({ form: \"newPost\" })(MyPostsForm);\r\n","import React from \"react\";\r\nimport { UserPhoto } from \"../../../common/UserPhoto/UserPhoto\";\r\n\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = ({ photo, message, likeCount }) => (\r\n  <div className={classes.item}>\r\n    <UserPhoto photo={photo} />\r\n    <div className={classes.message}>\r\n      <p className={classes.messageText}>{message}</p>\r\n      <p>{likeCount} like</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { MyPostsReduxForm } from \"./MyPostsForm\";\r\n\r\nimport Post from \"./Post/Post\";\r\nimport classes from \"./MyPosts.module.css\";\r\n\r\nconst MyPosts = React.memo(({ addPost, postData, photo }) => {\r\n  const addNewPost = (values) => {\r\n    addPost(values.newPostText);\r\n  };\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <MyPostsReduxForm onSubmit={addNewPost} />\r\n      <div className={classes.item}>\r\n        {[...postData].reverse().map((item) => (\r\n          <Post\r\n            key={item.id}\r\n            photo={photo}\r\n            message={item.message}\r\n            likeCount={item.likeCount}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPost } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n// const MyPostsContainer = () => {\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {({ getState, dispatch }) => {\r\n//         const addNewPost = () => {\r\n//           dispatch(addPostActionCreator());\r\n//         };\r\n//         const changeNewPostText = (text) => {\r\n//           dispatch(changeNewPostTextActionCreator(text));\r\n//         };\r\n//         return (\r\n//           <MyPosts\r\n//             posts={getState().profilePage.postData}\r\n//             newsPostText={getState().profilePage.newsPostText}\r\n//             addNewPost={addNewPost}\r\n//             changeNewPostText={changeNewPostText}\r\n//           />\r\n//         );\r\n//       }}\r\n//     </StoreContext.Consumer>\r\n//   );\r\n// };\r\n\r\nconst mapStateToProps = ({ profilePage: { postData, profile } }) => ({\r\n  postData,\r\n  photo: profile.photos.small,\r\n});\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  // if (isFetching) return <Preloader />;\r\n  return (\r\n    <p>\r\n      {!editMode && (\r\n        <div>\r\n          <span\r\n            className={classes.statusInput}\r\n            onDoubleClick={activateEditMode}\r\n          >\r\n            {props.status || \"----\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","export default __webpack_public_path__ + \"static/media/upload.b969462c.png\";","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required } from \"../../../../utils/validators/validators\";\r\nimport { Input, Textarea } from \"../../../common/FormsControls/FormsControls\";\r\nimport classes from \"../ProfileInfo.module.css\";\r\nimport style from \"../../../common/FormsControls/FormControls.module.css\";\r\n\r\nconst ProfileDataForm = ({ error, handleSubmit, profile }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit} className={classes.information}>\r\n      <div>\r\n        <p>\r\n          <strong>FullName: </strong>\r\n          <Field\r\n            className={classes.inputInfo}\r\n            validate={[]}\r\n            name=\"fullName\"\r\n            component={Input}\r\n            type=\"text\"\r\n            placeholder=\"FullName\"\r\n          />\r\n        </p>\r\n        <p>\r\n          <strong>Looking for a job: </strong>\r\n          <p>\r\n            <Field name=\"lookingForAJob\" type=\"checkbox\" component={Input} />\r\n          </p>\r\n          <p>\r\n            <Field\r\n              className={classes.inputInfo}\r\n              validate={[]}\r\n              name=\"lookingForAJobDescription\"\r\n              type=\"text\"\r\n              component={Textarea}\r\n            />\r\n          </p>\r\n        </p>\r\n        <p>\r\n          <strong>Info: </strong>\r\n          <Field\r\n            className={classes.inputInfo}\r\n            validate={[]}\r\n            name=\"aboutMe\"\r\n            type=\"text\"\r\n            component={Textarea}\r\n          />\r\n        </p>\r\n        <div>\r\n          <div className={classes.additionalInfo}>\r\n            <strong>Контакты</strong>\r\n            {Object.keys(profile.contacts).map((key) => {\r\n              return (\r\n                <div key={key}>\r\n                  <b>{key}:</b>\r\n                  <br />\r\n                  <Field\r\n                    className={classes.inputInfo}\r\n                    validate={[]}\r\n                    name={`contacts.${key}`}\r\n                    type=\"text\"\r\n                    component={Input}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {error && <div className={style.formSummaryError}>{error}</div>}\r\n      <button className={classes.btnSaveEdit}>Save Changes</button>\r\n    </form>\r\n  );\r\n};\r\nexport const ProfileDataReduxForm = reduxForm({ form: \"profileInfo\" })(\r\n  ProfileDataForm\r\n);\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport { UserPhoto } from \"../../common/UserPhoto/UserPhoto\";\r\nimport uploadPhoto from \"../../../assests/img/upload.png\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { ProfileDataReduxForm } from \"./ProfileDataForm/ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({\r\n  saveProfile,\r\n  savePhoto,\r\n  isOwner,\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const activeEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) savePhoto(e.target.files[0]);\r\n  };\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n  return (\r\n    <div className={classes.profileInfo}>\r\n      <div className={classes.userPhoto}>\r\n        <UserPhoto photo={profile.photos.large} />\r\n        {isOwner && (\r\n          <div className={classes.inputWrapper}>\r\n            <input\r\n              className={classes.inputFile}\r\n              id=\"input__file\"\r\n              type=\"file\"\r\n              name=\"file\"\r\n              onChange={onMainPhotoSelected}\r\n            />\r\n            <label for=\"input__file\" className={classes.inputFileButton}>\r\n              <span className={classes.inputFileIconWrapper}>\r\n                <img src={uploadPhoto} alt=\"Выбрать файл\" width=\"25\" />\r\n              </span>\r\n              <span className={classes.inputFileButtonText}>Выберите файл</span>\r\n            </label>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={classes.profileUserInfo}>\r\n        {editMode ? (\r\n          <ProfileDataReduxForm\r\n            profile={profile}\r\n            initialValues={profile}\r\n            onSubmit={onSubmit}\r\n          />\r\n        ) : (\r\n          <ProfileData\r\n            updateStatus={updateStatus}\r\n            status={status}\r\n            activeEditMode={activeEditMode}\r\n            isOwner={isOwner}\r\n            profile={profile}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst ProfileData = ({\r\n  status,\r\n  updateStatus,\r\n  activeEditMode,\r\n  profile,\r\n  isOwner,\r\n}) => {\r\n  const [isContacts, setIsContacts] = useState(false);\r\n  const onAdditionalInfoClick = () => {\r\n    setIsContacts(!isContacts);\r\n  };\r\n  return (\r\n    <>\r\n      <div className={classes.name}>{profile.fullName.toUpperCase()}</div>\r\n      {isOwner ? (\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      ) : (\r\n        <div>{status}</div>\r\n      )}\r\n\r\n      <div className={classes.information}>\r\n        <div>\r\n          <div>\r\n            <p>\r\n              <strong>Looking for a job: </strong>\r\n              <span>{profile.lookingForAJob ? \"Yes\" : \"No\"}</span>\r\n            </p>\r\n            {profile.lookingForAJobDescription && (\r\n              <p>\r\n                <strong>Job Description: </strong>\r\n                <span>{profile.lookingForAJobDescription}</span>\r\n              </p>\r\n            )}\r\n            <p>\r\n              <strong>Info: </strong>\r\n              {profile.aboutMe}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <div className={classes.additionalInfo}>\r\n              <div>\r\n                <strong>Контакты</strong>\r\n                {isContacts ? (\r\n                  <button\r\n                    className={classes.btnContacts}\r\n                    onClick={onAdditionalInfoClick}\r\n                  >\r\n                    hidden contacts\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    className={classes.btnContacts}\r\n                    onClick={onAdditionalInfoClick}\r\n                  >\r\n                    expand contacts\r\n                  </button>\r\n                )}\r\n              </div>\r\n              {isContacts &&\r\n                Object.keys(profile.contacts).map((key) => {\r\n                  console.log(profile.contacts[key]);\r\n                  if (\r\n                    profile.contacts[key] !== null &&\r\n                    profile.contacts[key].trim() !== \"\"\r\n                  )\r\n                    return (\r\n                      <Contact\r\n                        key={key}\r\n                        contactTitle={key}\r\n                        contactValue={profile.contacts[key]}\r\n                      />\r\n                    );\r\n                })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {isOwner && (\r\n          <button className={classes.btnChangeInfo} onClick={activeEditMode}>\r\n            Edit\r\n          </button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <p className={classes.contacts}>\r\n      <strong>{contactTitle}</strong>:{\" \"}\r\n      <a className={classes.socialLink} href=\"/\">\r\n        {contactValue}\r\n      </a>\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\n\r\nimport { MyPostsContainer } from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nimport classes from \"./Profile.module.css\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\n\r\nconst Profile = ({\r\n  saveProfile,\r\n  savePhoto,\r\n  isOwner,\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n}) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        saveProfile={saveProfile}\r\n        savePhoto={savePhoto}\r\n        isOwner={isOwner}\r\n        profile={profile}\r\n        status={status}\r\n        updateStatus={updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getProfile,\r\n  getStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n  updateStatus,\r\n} from \"../../redux/profileReducer\";\r\nimport Profile from \"./Profile\";\r\n\r\nconst ProfileContainer = (props) => {\r\n  useEffect(() => {\r\n    let userId = props.match.params.userId;\r\n    if (!userId) {\r\n      userId = props.authorizedUserId;\r\n      if (!userId) props.history.push(\"/login\");\r\n    }\r\n    props.getProfile(userId);\r\n    props.getStatus(userId);\r\n  }, [props.match.params.userId, props.isAuth]);\r\n\r\n  return (\r\n    <Profile\r\n      saveProfile={props.saveProfile}\r\n      isOwner={!props.match.params.userId}\r\n      {...props}\r\n      status={props.status}\r\n      savePhoto={props.savePhoto}\r\n      updateStatus={props.updateStatus}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ profilePage, auth }) => ({\r\n  profile: profilePage.profile,\r\n  status: profilePage.status,\r\n  authorizedUserId: auth.userId,\r\n  isAuth: auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getProfile,\r\n    updateStatus,\r\n    getStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}